services:
  publisher:
    image: async-rabbitmq-publisher
    build: async-rabbitmq-publisher
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,routed
    depends_on:
      lavinmq:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 1

  consumer-0:
    image: async-rabbitmq-consumer
    build: async-rabbitmq-consumer
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,routed_instance_CREATE
    depends_on:
      lavinmq:
        condition: service_healthy

  consumer-1:
    image: async-rabbitmq-consumer
    build: async-rabbitmq-consumer
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,routed_instance_UPDATE
    depends_on:
      lavinmq:
        condition: service_healthy

  consumer-2:
    image: async-rabbitmq-consumer
    build: async-rabbitmq-consumer
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,routed_instance_DELETE
    depends_on:
      lavinmq:
        condition: service_healthy

  #  rabbitmq:
  #    image: rabbitmq:latest
  #    mem_limit: 512m
  #    ports:
  #      - 5672:5672
  #      - 15672:15672
  #    healthcheck:
  #      test: ["CMD", "rabbitmqctl", "status"]
  #      interval: 5s
  #      timeout: 2s
  #      retries: 60

  lavinmq:
    image: cloudamqp/lavinmq:latest
    mem_limit: 512m
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: [ "CMD", "lavinmqctl", "status" ]
      interval: 5s
      timeout: 2s
      retries: 60
