server.port: 8080

management:
  endpoint:
    health:
      show-details: "ALWAYS"
  endpoints:
    web:
      exposure:
        include: "*"

resilience4j.circuitbreaker:
  configs:
    default:
      allowHealthIndicatorToFail: false
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 5
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      record-exceptions:
        - org.springframework.web.client.HttpServerErrorException
  instances:
    ok:
      base-config: default
    notok:
      base-config: default

resilience4j.retry:
  configs:
    default:
      maxAttempts: 10
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2.0
      exponential-max-wait-duration: 4000
      enableRandomizedWait: true
      randomizedWaitFactor: 0.5
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
  instances:
    mayFail:
      base-config: default

---
spring.config.activate.on-profile: docker
server.port: 8080

